quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
modelnull = function(){
# Priors
sigmaProc ~ dunif(0,5)
tauProc = pow(sigmaProc,-2)
N1 ~ dnorm(17,1/0.28^2)
N[1] = max(0,N1)
# Process model
for (t in 1:years){
N[t+1] = N[t] + eps[t]
eps[t] ~ dnorm(0,tauProc)
}
# Observation model
for (t in 1:years){
y[t] ~ dnorm(N[t],pow(yse[t],-2))
}
# Prediction model
for (t in (years+1):(years+2)){
N[t+1] = N[t] + eps[t] - dH
eps[t] ~ dnorm(0,tauProc)
}
}
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:unique(nyears)+2, y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:unique(nyears)+2, ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:unique(nyears)+2, y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 0%",
x = "Years",
y = "Number of wolves")
unique(nyears)
length(perspredictwolf)
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:unique(nyears)+2, ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:unique(nyears)+2, y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 0%",
x = "Years",
y = "Number of wolves")
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 0%",
x = "Years",
y = "Number of wolves")
modelnull = function(){
# Priors
sigmaProc ~ dunif(0,5)
tauProc = pow(sigmaProc,-2)
N1 ~ dnorm(17,1/0.28^2)
N[1] = max(0,N1)
# Process model
for (t in 1:years){
N[t+1] = N[t] + eps[t]
eps[t] ~ dnorm(0,tauProc)
}
# Observation model
#for (t in 1:years){
#  y[t] ~ dnorm(N[t],pow(yse[t],-2))
#}
# Prediction model
for (t in (years+1):(years+2)){
N[t+1] = N[t] + eps[t] - dH
eps[t] ~ dnorm(0,tauProc)
}
}
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
modelnull = function(){
# Priors
sigmaProc ~ dunif(0,5)
tauProc = pow(sigmaProc,-2)
N1 ~ dnorm(17,1/0.28^2)
N[1] = max(0,N1)
# Process model
for (t in 1:years){
N[t+1] = N[t] + eps[t]
eps[t] ~ dnorm(0,tauProc)
}
# Observation model
for (t in 1:years){
y[t] ~ dnorm(N[t],pow(yse[t],-2))
}
# Prediction model
for (t in (years+1):(years+2)){
N[t+1] = N[t] + eps[t] - dH
eps[t] ~ dnorm(0,tauProc)
}
}
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 0%",
x = "Years",
y = "Number of wolves")
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
for (i in 2:length(dat$N)+2){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[2])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:unique(nyears)+2, y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:unique(nyears)+2, ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:unique(nyears)+2, y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 10%",
x = "Years",
y = "Number of wolves")
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 10%",
x = "Years",
y = "Number of wolves")
modelnull = function(){
# Priors
sigmaProc ~ dunif(0,5)
tauProc = pow(sigmaProc,-2)
N1 ~ dnorm(17,1/0.28^2)
N[1] = max(0,N1)
# Process model
for (t in 1:years){
N[t+1] = N[t] + eps[t]
eps[t] ~ dnorm(0,tauProc)
}
# Observation model
for (t in 1:years){
y[t] ~ dnorm(N[t],pow(yse[t],-2))
}
# Prediction model
for (t in (years+1):(years+2)){
N[t+1] = (1-dH) * N[t] + eps[t]
eps[t] ~ dnorm(0,tauProc)
}
}
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
ObsSE[28]=0.28
ObsSE[29]=0.3
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[1])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 0%",
x = "Years",
y = "Number of wolves")
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
for (i in 2:length(dat$N)+2){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[2])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 10%",
x = "Years",
y = "Number of wolves")
length(quantile)
size(quantile)
quantile
perspredictwolf=matrix(NA,29,1)
perspredictwolf[1]=dat$N[1]
quantile=matrix(NA,29,2)
quantile[1,1] = quantile(dat$N[1], probs = 2.5/100)
quantile[1,2] = quantile(dat$N[1], probs = 97.5/100)
for (i in 2:(length(dat$N)+2)){
y = dat$N[1:i]
yse = ObsSE[1:i]
years = i
# Initialisation des données
bugs.data = list(
years = years,
y = y,
yse = yse,
dH = dH[2])
# Paramètres JAGS
bugs.monitor = c("sigmaProc","N", "tauProc")
bugs.chains = 3
bugs.inits = function(){
list(
)
}
# Lancement du programme
wolf_modelnull = jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = modelnull,
n.chains = bugs.chains,
n.thin=10,
n.iter=10000,
n.burnin=5000)
perspredictwolf[i] = median(wolf_modelnull$BUGSoutput$sims.list$N[,i+1])
quantile[i,1] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 2.5/100)
quantile[i,2] = quantile(wolf_modelnull$BUGSoutput$sims.list$N[,i+1], probs = 97.5/100)
}
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2025),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 10%",
x = "Years",
y = "Number of wolves")
ggplot()+
geom_line(aes(x = 1995 + 1:(unique(nyears)+2), y = perspredictwolf), colour = "red", lty = "dashed")+
geom_ribbon(aes(x = 1995 + 1:(unique(nyears)+2), ymin = quantile[,1], ymax = quantile[,2]), fill = "red", alpha = 0.3)+
geom_point(data = bugs.data %>% as_tibble, aes(x = 1995 + 1:(unique(nyears)+2), y = y)) +
coord_cartesian(xlim=c(1996,2023),ylim=c(0,1250))+
theme_bw()+
labs(title = "Projected and estimated population size",
subtitle = "Harvest rate : 10%",
x = "Years",
y = "Number of wolves")
