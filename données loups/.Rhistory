knitr::opts_chunk$set(echo = TRUE)
library(R2jags)
library(tidyverse)
exp_model <- function(){
# Priors
errorObs ~ dunif(0, 0.20)
sigmaProc ~ dunif(0, 10)
tauProc <- 1/sigmaProc^2
lambda ~ dunif(0, 2)
N[1] ~ dgamma(1.0E-6, 1.0E-6)
# Process model
for (t in 2:(nyears)) {
# density dependence on lambda
Nproc[t] <- log(max(1, lambda*N[t-1]))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
# Observation model
for (t in 1:nyears) {
sigmaObs[t] <- errorObs*N[t]
shapeObs[t] <- N[t]*N[t]/(sigmaObs[t]*sigmaObs[t])
rateObs[t] <- N[t]/(sigmaObs[t]*sigmaObs[t])
lambdaNobs[t] ~ dgamma(shapeObs[t], rateObs[t])
Nobs[t] ~ dpois(lambdaNobs[t])
}
# Projected population
for (t in (nyears + 1):(nyears + 15)) {
Nproc[t] <- log(max(1, lambda*(N[t-1])))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
}
frein_model <- function(){
# Priors
errorObs ~ dunif(0, 0.20)
sigmaProc ~ dunif(0, 10)
tauProc <- 1/sigmaProc^2
lambda ~ dunif(0, 2)
beta ~ dnorm(0, 1.0E-6)
N[1] ~ dgamma(1.0E-6, 1.0E-6)
# Process model
for (t in 2:(nyears)) {
Nproc[t] <- log(max(1, (lambda + beta*X[t-1])*N[t-1]))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
# Observation model
for (t in 1:nyears) {
sigmaObs[t] <- errorObs*N[t]
shapeObs[t] <- N[t]*N[t]/(sigmaObs[t]*sigmaObs[t])
rateObs[t] <- N[t]/(sigmaObs[t]*sigmaObs[t])
lambdaNobs[t] ~ dgamma(shapeObs[t], rateObs[t])
Nobs[t] ~ dpois(lambdaNobs[t])
}
# Projected population
for (t in (nyears + 1):(nyears + 15)) {
Nproc[t] <- log(max(1, (lambda + beta)*(N[t-1])))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
}
CMR <- c(17.1,35.4,
47.7,
25.1,
62.6,
47.9,
81.7,
110.5,
102.7,
135.9,
132.6,
101.7,
130.3,
141.4,
141.5,
175.5,
210.3,
174.5,
353.6,
280.2,
376.7,
561.2,
571.9,
682.4,
645.7,
783.8,
868)
thedata <- cbind(round(CMR), harvest)
thedata <- cbind(round(CMR), harvest)
harvest <- c(0,0,0,0,0,1,0,0,2,1,2,0,0,1,0,4,4,6,18,36,34,42,51,98,105,103,169)
thedata <- cbind(round(CMR), harvest)
colnames(thedata) <- c("N", "H")
thedata <- as.data.frame(thedata)
nyears <- nrow(thedata)
bugs.data <- list(
nyears = nyears,
Nobs = thedata$N
)
bugs.monitor <- c("lambda", "sigmaProc", "sigmaObs", "N", "tauProc")
bugs.chains <- 3
bugs.inits <- function(){
list(
)
}
exp_res <- jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = exp_model,
n.chains = bugs.chains,
n.thin = 10,
n.iter = 100000,
n.burnin = 50000)
knitr::opts_chunk$set(echo = TRUE)
library(R2jags)
library(tidyverse)
exp_model <- function(){
# Priors
errorObs ~ dunif(0, 0.20)
sigmaProc ~ dunif(0, 10)
tauProc <- 1/sigmaProc^2
lambda ~ dunif(0, 2)
N[1] ~ dgamma(1.0E-6, 1.0E-6)
# Process model
for (t in 2:(nyears)) {
# density dependence on lambda
Nproc[t] <- log(max(1, lambda*N[t-1]))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
# Observation model
for (t in 1:nyears) {
sigmaObs[t] <- errorObs*N[t]
shapeObs[t] <- N[t]*N[t]/(sigmaObs[t]*sigmaObs[t])
rateObs[t] <- N[t]/(sigmaObs[t]*sigmaObs[t])
lambdaNobs[t] ~ dgamma(shapeObs[t], rateObs[t])
Nobs[t] ~ dpois(lambdaNobs[t])
}
# Projected population
for (t in (nyears + 1):(nyears + 15)) {
Nproc[t] <- log(max(1, lambda*(N[t-1])))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
}
frein_model <- function(){
# Priors
errorObs ~ dunif(0, 0.20)
sigmaProc ~ dunif(0, 10)
tauProc <- 1/sigmaProc^2
lambda ~ dunif(0, 2)
beta ~ dnorm(0, 1.0E-6)
N[1] ~ dgamma(1.0E-6, 1.0E-6)
# Process model
for (t in 2:(nyears)) {
Nproc[t] <- log(max(1, (lambda + beta*X[t-1])*N[t-1]))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
# Observation model
for (t in 1:nyears) {
sigmaObs[t] <- errorObs*N[t]
shapeObs[t] <- N[t]*N[t]/(sigmaObs[t]*sigmaObs[t])
rateObs[t] <- N[t]/(sigmaObs[t]*sigmaObs[t])
lambdaNobs[t] ~ dgamma(shapeObs[t], rateObs[t])
Nobs[t] ~ dpois(lambdaNobs[t])
}
# Projected population
for (t in (nyears + 1):(nyears + 15)) {
Nproc[t] <- log(max(1, (lambda + beta)*(N[t-1])))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
}
harvest <- c(0,0,0,0,0,1,0,0,2,1,2,0,0,1,0,4,4,6,18,36,34,42,51,98,105,103,169)
CMR <- c(17.1,35.4,
47.7,
25.1,
62.6,
47.9,
81.7,
110.5,
102.7,
135.9,
132.6,
101.7,
130.3,
141.4,
141.5,
175.5,
210.3,
174.5,
353.6,
280.2,
376.7,
561.2,
571.9,
682.4,
645.7,
783.8,
868)
thedata <- cbind(round(CMR), harvest)
colnames(thedata) <- c("N", "H")
thedata <- as.data.frame(thedata)
nyears <- nrow(thedata)
bugs.data <- list(
nyears = nyears,
Nobs = thedata$N
)
bugs.monitor <- c("lambda", "sigmaProc", "sigmaObs", "N", "tauProc")
bugs.chains <- 3
bugs.inits <- function(){
list(
)
}
exp_res <- jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = exp_model,
n.chains = bugs.chains,
n.thin = 10,
n.iter = 100000,
n.burnin = 50000)
library(patchwork)
model <- function(){
# Priors
sigmaProc ~ dunif(0, 10)
tauProc <- 1/sigmaProc^2
lambda ~ dunif(0, 5)
N[1] ~ dgamma(1.0E-6, 1.0E-6)
# Process model
for (t in 2:(nyears)) {
mu[t] <- lambda * (N[t-1] - harvest[t-1])
Nproc[t] <- log(max(1, mu[t]))
N[t] ~ dlnorm(Nproc[t], tauProc)
}
# Observation model
for (t in 1:nyears) {
y[t] ~ dpois(N[t])
}
}
bugs.data <- list(
nyears = nrow(thedata),
y = round(thedata$N),
harvest = thedata$H)
bugs.monitor <- c("lambda", "sigmaProc","N", "tauProc")
bugs.chains <- 3
bugs.inits <- function(){
list(
)
}
library(R2jags)
wolf_mod <- jags(data = bugs.data,
inits = bugs.inits,
parameters.to.save = bugs.monitor,
model.file = model,
n.chains = bugs.chains,
n.thin = 10,
n.iter = 100000,
n.burnin = 50000)
print(wolf_mod, intervals = c(2.5/100, 50/100, 97.5/100))
wolf_mod$BUGSoutput$sims.matrix %>%
as_tibble() %>%
#  pivot_longer(cols = everything(),  values_to = "value", names_to = "parameter") %>%
#  filter(str_detect(parameter, "lambda")) %>%
ggplot() +
aes(x = lambda) +
geom_density() +
geom_vline(xintercept = 1, lty = "dashed", color = "red") +
labs(x = "Taux de croissance")
wolf_mod$BUGSoutput$sims.matrix %>%
as_tibble() %>%
pivot_longer(cols = everything(),  values_to = "value", names_to = "parameter") %>%
filter(str_detect(parameter, "N")) %>%
group_by(parameter) %>%
summarize(medianN = median(value),
lci = quantile(value, probs = 2.5/100),
uci = quantile(value, probs = 97.5/100)) %>%
mutate(an = parse_number(parameter) + 1994) %>%
arrange(an) %>%
ggplot() +
geom_ribbon(aes(x = an, y = medianN, ymin = lci, ymax = uci), fill = "red", alpha = 0.3) +
geom_line(aes(x = an, y = medianN), lty = "dashed", color = "red") +
#  geom_point(aes(x = an, y = medianN), color = "red") +
geom_point(data = bugs.data %>% as_tibble, aes(x = 1994 + 1:unique(nyears), y = y)) +
labs(y = "Effectifs de loups",
x = "Années",
title = "Projections")
wolf_mod$BUGSoutput$sims.matrix %>%
as_tibble() %>%
pivot_longer(cols = everything(),  values_to = "value", names_to = "parameter") %>%
filter(str_detect(parameter, "N")) %>%
group_by(parameter) %>%
summarize(medianN = median(value),
lci = quantile(value, probs = 2.5/100),
uci = quantile(value, probs = 97.5/100)) %>%
mutate(an = parse_number(parameter) + 1994) %>%
arrange(an) %>%
ggplot() +
geom_ribbon(aes(x = an, y = medianN, ymin = lci, ymax = uci), fill = "red", alpha = 0.3) +
geom_line(aes(x = an, y = medianN), lty = "dashed", color = "red") +
#  geom_point(aes(x = an, y = medianN), color = "red") +
geom_point(data = bugs.data %>% as_tibble, aes(x = 1994 + 1:unique(nyears), y = y)) +
labs(y = "Effectifs de loups",
x = "Années",
title = "Projections")
tinytex::install_tinytex()
tinytex::install_tinytex()
